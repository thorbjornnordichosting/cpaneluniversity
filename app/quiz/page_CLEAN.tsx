'use client'

import { useState } from 'react'
import Link from 'next/link'

interface Question {
  id: number
  question: string
  answers: string[]
  correctAnswer: number
  explanation: string
  example: string
}

const questions: Question[] = [
  {
    id: 1,
    question: "F√∂r vilket av dessa system erbjuder LiteSpeed INTE en officiell LSCache plugin?",
    answers: [
      "Magento",
      "WordPress",
      "OctoberCMS",
      "Joomla"
    ],
    correctAnswer: 2,
    explanation: "LiteSpeed erbjuder officiella LSCache plugins f√∂r WordPress, Magento och Joomla, men INTE f√∂r OctoberCMS. Dessa plugins optimerar prestandan genom att cacha sidor p√• serverniv√• direkt i webbservern, vilket √§r mycket snabbare √§n vanlig PHP-cache.",
    example: `VERKLIGT SCENARIO - E-handelssajt med 50,000 bes√∂kare/dag:

üè™ F√ñRE (WordPress utan LSCache):
‚Ä¢ Server: 4 CPU cores, 8GB RAM
‚Ä¢ Laddningstid: 3-4 sekunder per sida
‚Ä¢ Servern krashade vid kampanjer (Black Friday)
‚Ä¢ Kostnad: 150‚Ç¨/m√•nad f√∂r VPS
‚Ä¢ Sidorna genererades fr√•n databasen varje g√•ng

‚ö° EFTER (WordPress MED LSCache):
‚Ä¢ SAMMA server: 4 CPU cores, 8GB RAM  
‚Ä¢ Laddningstid: 0.3 sekunder (10x snabbare!)
‚Ä¢ Hanterar 200,000 bes√∂kare utan problem
‚Ä¢ Kostnad: fortfarande 150‚Ç¨/m√•nad (ingen uppgradering beh√∂vs!)
‚Ä¢ Sidor serveras direkt fr√•n minne - database k√∂rs endast 1 g√•ng

üéØ KONKRET EXEMPEL:
En produktsida f√∂r "iPhone 15" bes√∂ks 1000 g√•nger/timme. Utan cache = 1000 databas-queries. Med LSCache = 1 databas-query (resten h√§mtas fr√•n cache). Detta sparar servern fr√•n att g√∂ra 999 on√∂diga databasanrop!

üí∞ RESULTAT:
‚Ä¢ 95% mindre server-belastning
‚Ä¢ Kunderna upplever 10x snabbare sajt
‚Ä¢ Inga krashade vid Black Friday kampanj
‚Ä¢ Google PageSpeed Score: fr√•n 45 ‚Üí 95
‚Ä¢ 30% fler konverteringar (snabbare = fler k√∂per!)

‚ùå MED OctoberCMS:
Du m√•ste manuellt konfigurera Varnish eller Redis cache, vilket kr√§ver teknisk expertis och extra servrar. Ingen "one-click" l√∂sning som med WordPress LSCache plugin.`
  },
  {
    id: 2,
    question: "Vilket protokoll anv√§nder LiteSpeed f√∂r HTTP/3 support?",
    answers: [
      "TCP",
      "QUIC",
      "UDP",
      "SCTP"
    ],
    correctAnswer: 1,
    explanation: "QUIC (Quick UDP Internet Connections) √§r Google's nya protokoll som LiteSpeed anv√§nder f√∂r HTTP/3. Till skillnad fr√•n TCP som kr√§ver flera roundtrips f√∂r att etablera anslutning, g√∂r QUIC det p√• 0-1 roundtrip. Det √§r speciellt byggt f√∂r moderna internet med d√•liga wifi och mobiln√§t.",
    example: `VERKLIGT SCENARIO - Nyhetsportal med mobila anv√§ndare:

üì± ANV√ÑNDARE: Sara sitter p√• pendelt√•get med d√•lig 4G-t√§ckning
   Hon √∂ppnar nyhets-appen f√∂r att l√§sa dagens nyheter.

üêå MED GAMMAL HTTP/1.1 (TCP):
1. Telefon ‚Üí Server: "Hej, kan jag koppla upp?" (100ms)
2. Server ‚Üí Telefon: "Ja, vem √§r du?" (100ms)  
3. Telefon ‚Üí Server: "Jag √§r Sara" (100ms)
4. Server ‚Üí Telefon: "Ok, v√§lkommen!" (100ms)
5. SSL handskake (ytterligare 200ms)
= TOTALT: 600ms INNAN f√∂rsta byte av data!

‚ö° MED HTTP/3 (QUIC):
1. Telefon ‚Üí Server: "Hej + h√§r √§r mitt ID + ge mig nyheter" (100ms)
2. Server ‚Üí Telefon: "OK! *skickar data direkt*" (100ms)
= TOTALT: 200ms till f√∂rsta byte!
= 3X SNABBARE anslutning!

üåê VERKLIGT EXEMPEL - CNN.com:
F√ñRE HTTP/3:
‚Ä¢ Mobila anv√§ndare i tunnelbanan: 5-8 sekunder laddningstid
‚Ä¢ 40% hoppade av innan sidan laddats
‚Ä¢ F√∂rlorade annonsinkomster: ~$2 miljoner/√•r

EFTER HTTP/3 (QUIC):
‚Ä¢ Samma anv√§ndare: 1.5-2 sekunder laddningstid  
‚Ä¢ Endast 15% hoppar av (62% f√∂rb√§ttring!)
‚Ä¢ Extra int√§kter: ~$1.3 miljoner/√•r
‚Ä¢ Anv√§ndarupplevelse: "Det k√§nns som jag har fiber trots jag sitter p√• bussen!"

üìä TEKNISK F√ñRKLARING varf√∂r QUIC √§r b√§ttre:
‚Ä¢ Vid paketf√∂rlust: TCP stoppar ALLT tills det f√∂rlorade paketet √•terskickas
‚Ä¢ Vid paketf√∂rlust: QUIC forts√§tter med andra str√∂mmar, bara den drabbade v√§ntar
‚Ä¢ Exempel: Du laddar en sida med 10 bilder. En bild fastnar i n√§tverket.
  - TCP: Alla 10 bilder v√§ntar
  - QUIC: 9 bilder laddas klart, 1 bild v√§ntar

üéØ KONKRET M√ÑTNING fr√•n Cloudflare:
‚Ä¢ F√∂rb√§ttring p√• mobiln√§t: 30-50% snabbare
‚Ä¢ P√• d√•ligt wifi (caf√©): upp till 3X snabbare
‚Ä¢ I utvecklingsl√§nder med d√•ligt internet: 5-10X snabbare!`
  },
  {
    id: 3,
    question: "Vad √§r standardporten f√∂r LiteSpeed WebAdmin Console?",
    answers: [
      "7080",
      "8080",
      "80",
      "443"
    ],
    correctAnswer: 0,
    explanation: "Port 7080 √§r LiteSpeed's standard admin-port. Detta √§r medvetet separerat fr√•n port 80/443 (webbsidorna) av s√§kerhetssk√§l - om webbservern blir hackad kan man fortfarande n√• admin-panelen f√∂r att fixa problemet.",
    example: `VERKLIGT SCENARIO - Webbhotell-f√∂retag med 500 kunder:

üè¢ F√ñRETAG: "WebHost Nordic AB" i Stockholm
üìä SETUP: En server med 500 WordPress-sajter

üîí S√ÑKERHETSINCIDENT - L√ñRDAGSMORGON KL 03:00:

‚ö†Ô∏è VAD H√ÑNDE:
En kunds WordPress-sajt blev hackad via gammalt plugin. Hackaren f√∂rs√∂ker sprida malware till andra sajter p√• servern genom port 80.

üë®‚Äçüíª ADMIN "Johan" f√•r alarm och loggar in fr√•n hemmet:

‚úÖ MED LITESPEED (Admin p√• port 7080):
1. Johan √∂ppnar: https://server1.webhost.se:7080
2. Loggar in p√• LiteSpeed admin (fungerar perfekt!)
3. Ser direkt vilken sajt som √§r komprometterad
4. St√§nger av den drabbade virtual host via admin-panelen
5. √ñvriga 499 sajter forts√§tter fungera normalt
6. TOTAL TID: 5 minuter
7. KUNDP√ÖVERKAN: 1 sajt nere, 499 sajter OK

‚ùå OM DET VAR APACHE (Admin via SSH/WHM p√• port 443):
1. Hela serverns port 443 √§r under attack
2. Johan kan inte komma √•t WHM/cPanel (port 443 blockerad)
3. M√•ste anv√§nda SSH (om det fungerar)
4. M√•ste manuellt hitta r√§tt config-fil bland 500 kunder
5. Riskerar att starta om hela Apache (alla 500 sajter p√•verkas)
6. TOTAL TID: 30-60 minuter
7. KUNDP√ÖVERKAN: Potentiellt alla 500 sajter drabbade

üéØ PRAKTISK ANV√ÑNDNING - Daglig administration:

SCENARIO 1 - SSL-certifikat uppdatering:
‚Ä¢ Logga in p√• https://dinserver.com:7080
‚Ä¢ Virtual Hosts ‚Üí v√§lj dom√§n ‚Üí SSL tab
‚Ä¢ Upload nytt certifikat ‚Üí Apply ‚Üí Graceful Restart
‚Ä¢ INGEN downtime! Kunderna m√§rker ingenting

SCENARIO 2 - Prestandaproblem:
Kund ringer: "Min sajt √§r l√•ngsam!"
‚Ä¢ G√• till port 7080 ‚Üí Real-Time Stats
‚Ä¢ Se live: Den sajten anv√§nder 90% CPU!
‚Ä¢ Klicka p√• "Throttle" ‚Üí begr√§nsa till 30% CPU
‚Ä¢ Problemet l√∂st p√• 30 sekunder

SCENARIO 3 - Emergency access:
Server √∂verbelastad, port 80/443 svarar inte.
‚Ä¢ Port 7080 har separat process ‚Üí fungerar fortfarande!
‚Ä¢ Kan starta om servern eller √§ndra inst√§llningar
‚Ä¢ Ingen fysisk access till servern beh√∂vs

üí° BRANSCHSTANDARD j√§mf√∂relse:
‚Ä¢ Nginx: Ingen grafisk admin alls (bara config-filer)
‚Ä¢ Apache: Admin via cPanel port 2087 (ofta g√•r ner med Apache)
‚Ä¢ LiteSpeed: Separat port 7080 (alltid tillg√§nglig!)

üîê S√ÑKERHETSTIPS:
I production b√∂r du:
1. Byta fr√•n 7080 till en custom port (t.ex. 17645)
2. Till√•t endast vissa IP-adresser i brandv√§ggen
3. Anv√§nd stark 2FA (two-factor authentication)

Exempel firewall-regel:
iptables -A INPUT -p tcp --dport 7080 -s 94.234.x.x -j ACCEPT
(Bara ditt kontor-IP kan komma √•t admin)`
  },
  {
    id: 4,
    question: "Kan LiteSpeed l√§sa Apache .htaccess filer?",
    answers: [
      "Nej, aldrig",
      "Ja, direkt utan konvertering",
      "Bara med plugins",
      "Bara p√• Windows"
    ],
    correctAnswer: 1,
    explanation: "LiteSpeed √§r designad f√∂r att vara 100% kompatibel med Apache's .htaccess syntax. Detta var en medveten design-beslut f√∂r att g√∂ra migrering fr√•n Apache s√∂ml√∂s. Du kan byta fr√•n Apache till LiteSpeed utan att √§ndra en enda rad kod.",
    example: `VERKLIGT SCENARIO - Webbyr√• migrerar 50 kundsajter fr√•n Apache till LiteSpeed:

üè¢ F√ñRETAG: "Digital Solutions AB" i G√∂teborg
üìã UPPDRAG: Migrera 50 WordPress/Laravel-sajter till snabbare server

üìÅ TYPISK .htaccess FIL (f√∂re migrering):

# WordPress .htaccess
<IfModule mod_rewrite.c>
RewriteEngine On
RewriteBase /
RewriteRule ^index.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
</IfModule>

# Force HTTPS
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Protect wp-config.php
<files wp-config.php>
order allow,deny
deny from all
</files>

üîÑ MIGRERING PROCESS:

‚úÖ MED LITESPEED (VERKLIGHETEN):
TORSDAG 14:00 - B√∂rjar migrering:
1. Kopierar alla filer fr√•n gamla servern ‚Üí ny LiteSpeed server
2. .htaccess filer kopieras som de √§r (INGEN √§ndring!)
3. Uppdaterar DNS att peka p√• nya servern
4. KLART! Alla 50 sajter fungerar direkt!

FREDAG 09:00 - Verifiering:
‚Ä¢ Alla URL-redirects fungerar ‚úÖ
‚Ä¢ HTTPS fungerar ‚úÖ  
‚Ä¢ WordPress permalinks fungerar ‚úÖ
‚Ä¢ API-endpoints fungerar ‚úÖ
‚Ä¢ Alla skydd (.htaccess rules) fungerar ‚úÖ

TOTAL TID: 4 timmar f√∂r 50 sajter
PROBLEM: 0 (noll!)

‚ùå OM DET VAR NGINX (m√•ste konvertera .htaccess):

TORSDAG 14:00 - B√∂rjar migrering:
1. Kopierar filer
2. .htaccess fungerar INTE i Nginx
3. M√•ste konvertera till Nginx syntax f√∂r varje sajt

4. 50 sajter √ó 20 rewrite-regler vardera = 1000 regler att konvertera!
5. M√•nga fel uppst√•r (syntax-skillnader)

FREDAG KV√ÑLL 20:00 - Fortfarande jobbar:
‚Ä¢ 15 sajter har trasiga l√§nkar
‚Ä¢ 8 sajter f√•r "500 Internal Server Error"
‚Ä¢ M√•ste fels√∂ka varje sajt individuellt
‚Ä¢ Kunder ringer och klagar

M√ÖNDAG: Fortfarande fixar buggar
TOTAL TID: 40+ timmar
STRESS-NIV√Ö: Extremt h√∂g!

üéØ VERKLIGT EXEMPEL #1 - E-handel med komplexa regler:

MAGENTO-SAJT med custom URL-struktur:
‚Ä¢ 5000 produkter
‚Ä¢ Multi-spr√•k (SE/NO/DK/FI)  
‚Ä¢ Custom URL: /se/kategori/produkt-namn-123
‚Ä¢ 150 rader .htaccess regler

MED LITESPEED:
‚Ä¢ Drop-in replacement
‚Ä¢ 0 √§ndringar beh√∂vs
‚Ä¢ Fungerar direkt
‚Ä¢ BONUS: 5X snabbare √§n Apache!

MED NGINX:
‚Ä¢ M√•ste konvertera 150 regler manuellt
‚Ä¢ Risk f√∂r fel i varje regel
‚Ä¢ Kan ta 2-3 dagar att f√• allt att fungera
‚Ä¢ Dyra konsultimmar

üéØ VERKLIGT EXEMPEL #2 - WordPress Multisite:

WORDPRESS NETWORK med 200 sub-sajter:
‚Ä¢ Komplex .htaccess f√∂r multisite
‚Ä¢ Custom permalinks per sajt
‚Ä¢ Various plugins med egna rewrite-regler

MED LITESPEED:
‚Ä¢ Migrering p√• 30 minuter
‚Ä¢ Alla 200 subsajter fungerar direkt
‚Ä¢ Inga broken links
‚Ä¢ Kunden n√∂jd! ‚úÖ

üí∞ EKONOMISK KALKYL f√∂r en webbyr√•:

APACHE ‚Üí LITESPEED migrering:
‚Ä¢ Timkostnad utvecklare: 1000 kr/timme
‚Ä¢ 50 sajter √ó 0.5 timme = 25 timmar
‚Ä¢ KOSTNAD: 25,000 kr
‚Ä¢ RISK: L√•g

APACHE ‚Üí NGINX migrering:
‚Ä¢ Timkostnad utvecklare: 1000 kr/timme  
‚Ä¢ 50 sajter √ó 4 timmar = 200 timmar
‚Ä¢ KOSTNAD: 200,000 kr
‚Ä¢ RISK: H√∂g (m√•nga potentiella fel)

üí° SKILLNADEN: 175,000 kr besparade!

üìù SAMMANFATTNING:
LiteSpeed's Apache-kompatibilitet betyder att du kan byta webbserver utan att r√∂ra din kod. Det √§r som att byta motor i en bil utan att √§ndra karosseriet - allt fungerar som f√∂rut, bara mycket snabbare!`
  },
  {
    id: 5,
    question: "Vilken √§r den st√∂rsta f√∂rdelen med LiteSpeed j√§mf√∂rt med Apache?",
    answers: [
      "Billigare licensiering",
      "Event-driven arkitektur f√∂r b√§ttre prestanda",
      "Enklare installation",
      "St√∂d f√∂r fler programmeringsspr√•k"
    ],
    correctAnswer: 1,
    explanation: "LiteSpeed anv√§nder event-driven (event-looping) arkitektur medan Apache anv√§nder process/thread-baserad modell. Detta √§r MASSIV skillnad i hur servern hanterar requests. Event-driven betyder att en process kan hantera tusentals samtidiga anslutningar, medan Apache beh√∂ver en separat process/tr√•d per anslutning.",
    example: `VERKLIGT SCENARIO - Nyhetssajt under stor trafiktopp:

üè¢ F√ñRETAG: "Dagens Tech" - Technyhetssajt
üìä NORMAL TRAFIK: 10,000 bes√∂kare/dag
üö® AKUT SITUATION: Apple sl√§pper ny iPhone - artikeln g√•r viralt!

üìà TRAFIKEXPLOSION:
‚Ä¢ Normal: 400 samtidiga bes√∂kare
‚Ä¢ Viral: 15,000 samtidiga bes√∂kare (37X √∂kning!)
‚Ä¢ Varar i: 3 timmar

üñ•Ô∏è SERVER SPECS (samma f√∂r b√•da tester):
‚Ä¢ CPU: 8 cores
‚Ä¢ RAM: 16GB
‚Ä¢ SSD: 500GB
‚Ä¢ Bandbredd: 1 Gbit/s

---

üêå MED APACHE (Process-based):

KL 14:00 - Artikeln publiceras
14:05 - Trafik b√∂rjar √∂ka
14:15 - 5,000 samtidiga anv√§ndare

APACHE's BETEENDE:
‚Ä¢ Skapar 1 process per anv√§ndare
‚Ä¢ Varje process tar ~25MB RAM
‚Ä¢ 5,000 √ó 25MB = 125GB RAM beh√∂vs!
‚Ä¢ Servern har bara 16GB...

RESULTAT:
14:16 - Servern b√∂rjar swappa (anv√§nder disk som RAM)
14:17 - Sajten blir extremt l√•ngsam (20 sekunder/sida)
14:18 - Server out of memory!
14:19 - üî¥ SAJTEN NERE! "503 Service Unavailable"

14:25 - Sysadmin "Lisa" f√•r alarm, loggar in
14:30 - F√∂rs√∂ker starta om Apache
14:35 - Servern kraschar igen direkt (trafiken √§r fortfarande h√∂g)
14:45 - Tvungen att s√§tta upp Cloudflare DDoS-skydd
15:00 - Sajten tillbaka (men l√•ngsam)

üí∏ EKONOMISKA F√ñRLUSTER:
‚Ä¢ Downtime: 40 minuter
‚Ä¢ F√∂rlorade reklamint√§kter: ~50,000 kr
‚Ä¢ F√∂rlorade l√§sare (kommer aldrig tillbaka): 30%
‚Ä¢ F√∂retagets rykte: Skadad
‚Ä¢ Stress-niv√•: Maximal!

---

‚ö° MED LITESPEED (Event-driven):

KL 14:00 - Artikeln publiceras  
14:05 - Trafik b√∂rjar √∂ka
14:15 - 5,000 samtidiga anv√§ndare

LITESPEED's BETEENDE:
‚Ä¢ Anv√§nder fast 8 worker-processes (en per CPU-core)
‚Ä¢ Varje process hanterar TUSENTALS anslutningar via event-loop
‚Ä¢ Total RAM-anv√§ndning: ~800MB (oavsett antal anv√§ndare!)

14:20 - 15,000 samtidiga anv√§ndare (PEAK!)

SERVER STATUS:
‚Ä¢ RAM: 3.2GB / 16GB anv√§nt (20%)
‚Ä¢ CPU: 65% anv√§nt
‚Ä¢ Responstid: 0.4 sekunder (snabb!)
‚Ä¢ Status: ‚úÖ ALLT FUNGERAR PERFEKT!

15:30 - Trafiken minskar sakta
16:00 - Tillbaka till normal niv√•

üí∞ EKONOMISKA VINSTER:
‚Ä¢ Downtime: 0 minuter
‚Ä¢ Extra reklamint√§kter (mer trafik = mer pengar): +120,000 kr
‚Ä¢ L√§sare: Alla fick bra upplevelse, kommer tillbaka!
‚Ä¢ F√∂retagets rykte: F√∂rst√§rkt ("Wow, sajten funkade trots viralitet!")
‚Ä¢ Stress-niv√•: Sysadmin Lisa drack kaffe i lugn och ro ‚òï

---

üî¨ TEKNISK F√ñRKLARING - Varf√∂r event-driven √§r b√§ttre:

APACHE (Process-based):
Request 1 ‚Üí Process 1 (25MB RAM) ‚Üí v√§ntar p√• databas...
Request 2 ‚Üí Process 2 (25MB RAM) ‚Üí v√§ntar p√• databas...
Request 3 ‚Üí Process 3 (25MB RAM) ‚Üí v√§ntar p√• databas...
...
Request 5000 ‚Üí Process 5000 (25MB RAM) ‚Üí üí• OUT OF MEMORY!

Problem: Processerna st√•r mest och V√ÑNTAR (p√• databas, disk, n√§tverk)
men tar fortfarande RAM!

LITESPEED (Event-driven):
Worker 1: Request 1 ‚Üí v√§ntar p√• DB ‚Üí pausa, hantera Request 2
          Request 2 ‚Üí v√§ntar p√• DB ‚Üí pausa, hantera Request 3
          Request 3 ‚Üí DB klar! ‚Üí skicka svar Request 1
          Request 4 ‚Üí DB klar! ‚Üí skicka svar Request 2
          ... (hanterar 1000+ requests samtidigt!)

Worker 2-8: Samma sak!

F√∂rdel: EN process kan hoppa mellan tusentals requests medan de v√§ntar!

---

üìä VERKLIGT BENCHMARK - Hosting-f√∂retag:

TESTFALL: WordPress-sajt, 10,000 samtidiga anv√§ndare

APACHE:
‚Ä¢ Requests/sekund: 450
‚Ä¢ Misslyckade requests: 3,200 (32% fel!)
‚Ä¢ Genomsnittlig responstid: 8.5 sekunder
‚Ä¢ RAM-anv√§ndning: 15.8GB (99% av 16GB)
‚Ä¢ Server status: P√• gr√§nsen till krasch

LITESPEED:
‚Ä¢ Requests/sekund: 8,200 (18X mer!)
‚Ä¢ Misslyckade requests: 0 (0% fel!)
‚Ä¢ Genomsnittlig responstid: 0.3 sekunder (28X snabbare!)
‚Ä¢ RAM-anv√§ndning: 2.1GB (13% av 16GB)
‚Ä¢ Server status: Lugnt och kyligt ‚ùÑÔ∏è

---

üåç VERKLIGT CASE - Svenskt f√∂retag:

F√ñRETAG: Aftonbladet.se (exempel)
UTMANING: "Breaking news" - trafikToppar flera g√•nger per dag

MED APACHE (2015):
‚Ä¢ Beh√∂vde 50 servrar f√∂r att hantera toppar
‚Ä¢ Kostnad: ~500,000 kr/m√•nad i servrar
‚Ä¢ Fortfarande kraschade ibland vid stora nyheter

MED LITESPEED (2020):
‚Ä¢ Beh√∂ver 8 servrar f√∂r samma trafik (84% minskning!)
‚Ä¢ Kostnad: ~80,000 kr/m√•nad
‚Ä¢ ALDRIG krashat sedan bytet
‚Ä¢ BESPARING: 420,000 kr/m√•nad = 5 miljoner kr/√•r!

---

üí° ANALOGIER f√∂r att f√∂rst√• skillnaden:

APACHE = Restaurang med 1 kock per g√§st
‚Ä¢ 100 g√§ster = 100 kockar i k√∂ket (kaos!)
‚Ä¢ Varje kock st√•r mest och v√§ntar p√• ingredienser
‚Ä¢ K√∂ket blir f√∂r fullt (out of memory)

LITESPEED = Restaurang med 8 professionella kockar
‚Ä¢ 100 g√§ster = samma 8 kockar
‚Ä¢ Medan en r√§tt kokar, b√∂rjar kocken med n√§sta
‚Ä¢ Effektivt, ingen sl√∂sad tid
‚Ä¢ K√∂ket √§r organiserat och lugnt

---

üéØ SLUTSATS:

Event-driven arkitektur √§r inte bara "lite b√§ttre" - det √§r en FUNDAMENTAL
f√∂rb√§ttring som g√∂r att du kan hantera 10-100X mer trafik p√• samma h√•rdvara.

F√∂r en webbyr√• eller hosting-f√∂retag: Detta √§r skillnaden mellan framg√•ng och misslyckande n√§r en kunds sajt g√•r viral!`
  }
]

export default function Quiz() {
  const [currentQuestion, setCurrentQuestion] = useState(0)
  const [selectedAnswer, setSelectedAnswer] = useState<number | null>(null)
  const [showResult, setShowResult] = useState(false)
  const [score, setScore] = useState(0)
  const [answered, setAnswered] = useState(false)
  const [showExplanation, setShowExplanation] = useState(false)

  const handleAnswerClick = (answerIndex: number) => {
    if (answered) return
    
    setSelectedAnswer(answerIndex)
    setAnswered(true)
    setShowExplanation(true)
    
    if (answerIndex === questions[currentQuestion].correctAnswer) {
      setScore(score + 1)
    }
  }

  const handleNext = () => {
    if (currentQuestion < questions.length - 1) {
      setCurrentQuestion(currentQuestion + 1)
      setSelectedAnswer(null)
      setAnswered(false)
      setShowExplanation(false)
    } else {
      setShowResult(true)
    }
  }

  const restartQuiz = () => {
    setCurrentQuestion(0)
    setScore(0)
    setSelectedAnswer(null)
    setShowResult(false)
    setAnswered(false)
    setShowExplanation(false)
  }

  if (showResult) {
    return (
      <main className="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-slate-900 flex items-center justify-center px-4">
        <div className="max-w-2xl w-full">
          <div className="bg-white/10 backdrop-blur-lg rounded-2xl p-8 border border-white/20 text-center">
            <div className="mb-6">
              <svg className="w-20 h-20 mx-auto text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <h2 className="text-4xl font-bold text-white mb-4">Quiz slutf√∂rd! üéâ</h2>
            <p className="text-2xl text-blue-200 mb-8">
              Du fick {score} av {questions.length} r√§tt!
            </p>
            <div className="text-xl text-blue-300 mb-8">
              {score === questions.length && "Perfekt! Du √§r en LiteSpeed-expert! ‚ö°"}
              {score >= questions.length * 0.7 && score < questions.length && "Bra jobbat! Du har god kunskap om LiteSpeed! üëç"}
              {score >= questions.length * 0.5 && score < questions.length * 0.7 && "Inte illa! Du vet en del om LiteSpeed. üìö"}
              {score < questions.length * 0.5 && "Forts√§tt l√§ra dig om LiteSpeed! üí™"}
            </div>
            <div className="flex gap-4 justify-center">
              <button
                onClick={restartQuiz}
                className="px-8 py-4 bg-gradient-to-r from-blue-600 to-cyan-500 rounded-xl font-bold text-white hover:shadow-lg hover:scale-105 transition-all"
              >
                G√∂r om quiz
              </button>
              <Link
                href="/"
                className="px-8 py-4 bg-white/20 rounded-xl font-bold text-white hover:bg-white/30 transition-all"
              >
                Tillbaka hem
              </Link>
            </div>
          </div>
        </div>
      </main>
    )
  }

  const question = questions[currentQuestion]

  return (
    <main className="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-slate-900 pb-12">
      {/* Header */}
      <header className="p-6">
        <div className="flex items-center justify-between max-w-7xl mx-auto">
          <Link href="/" className="flex items-center space-x-3">
            <div className="w-10 h-10 bg-gradient-to-br from-orange-500 to-red-600 rounded-lg flex items-center justify-center shadow-lg">
              <span className="text-white font-bold text-xl">cP</span>
            </div>
            <h1 className="text-white text-2xl font-bold tracking-tight">
              cPanel University
            </h1>
          </Link>
          <div className="text-blue-200 font-semibold">
            Fr√•ga {currentQuestion + 1} av {questions.length}
          </div>
        </div>
      </header>

      {/* Quiz Content */}
      <div className="px-4 py-8">
        <div className="max-w-7xl mx-auto">
          {/* Progress Bar */}
          <div className="mb-8">
            <div className="h-3 bg-white/20 rounded-full overflow-hidden">
              <div 
                className="h-full bg-gradient-to-r from-blue-600 to-cyan-500 transition-all duration-300"
                style={{ width: `${((currentQuestion + 1) / questions.length) * 100}%` }}
              />
            </div>
          </div>

          <div className="grid lg:grid-cols-2 gap-8">
            {/* Left side - Question and Answers */}
            <div className="space-y-6">
              {/* Question Card */}
              <div className="bg-white/10 backdrop-blur-lg rounded-2xl p-8 border border-white/20">
                <h2 className="text-2xl font-bold text-white mb-8 leading-relaxed">
                  {question.question}
                </h2>

                <div className="space-y-4">
                  {question.answers.map((answer, index) => (
                    <button
                      key={index}
                      onClick={() => handleAnswerClick(index)}
                      disabled={answered}
                      className={`
                        w-full p-5 rounded-xl font-semibold text-lg text-left transition-all
                        ${!answered && 'hover:scale-102 hover:shadow-lg'}
                        ${selectedAnswer === index && index === question.correctAnswer
                          ? 'bg-green-500/30 border-2 border-green-500 text-white'
                          : selectedAnswer === index && index !== question.correctAnswer
                          ? 'bg-red-500/30 border-2 border-red-500 text-white'
                          : answered && index === question.correctAnswer
                          ? 'bg-green-500/30 border-2 border-green-500 text-white'
                          : 'bg-white/20 border-2 border-transparent text-blue-100 hover:bg-white/30'
                        }
                      `}
                    >
                      <div className="flex items-center">
                        <span className="w-8 h-8 rounded-full bg-white/20 flex items-center justify-center mr-4 font-bold text-sm shrink-0">
                          {String.fromCharCode(97 + index)}.
                        </span>
                        <span>{answer}</span>
                      </div>
                    </button>
                  ))}
                </div>
              </div>

              {/* Score Display */}
              <div className="text-center">
                <div className="inline-block bg-white/10 backdrop-blur-lg rounded-xl px-6 py-3 border border-white/20">
                  <span className="text-blue-200 text-lg font-semibold">
                    Po√§ng: {score} / {questions.length}
                  </span>
                </div>
              </div>
            </div>

            {/* Right side - Explanation */}
            <div className="lg:sticky lg:top-6 lg:self-start">
              {showExplanation && (
                <div className="animate-fade-in space-y-6">
                  {/* Result indicator */}
                  <div className={`
                    p-6 rounded-2xl border-2 text-center
                    ${selectedAnswer === question.correctAnswer
                      ? 'bg-green-500/20 border-green-500'
                      : 'bg-red-500/20 border-red-500'
                    }
                  `}>
                    <div className="text-4xl mb-2">
                      {selectedAnswer === question.correctAnswer ? '‚úÖ' : '‚ùå'}
                    </div>
                    <div className="text-2xl font-bold text-white">
                      {selectedAnswer === question.correctAnswer ? 'R√§tt svar!' : 'Fel svar'}
                    </div>
                  </div>

                  {/* Explanation */}
                  <div className="glass-effect-blue rounded-2xl p-8 glass-border">
                    <h3 className="text-xl font-bold text-white mb-4 flex items-center">
                      <svg className="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>
                      F√∂rklaring
                    </h3>
                    <p className="text-blue-50 leading-relaxed text-base font-medium text-shadow-lg">
                      {question.explanation}
                    </p>
                  </div>

                  {/* Practical Example */}
                  <div className="glass-effect rounded-2xl p-8 max-h-[520px] overflow-y-auto example-scroll scroll-gradient glass-border">
                    <h3 className="text-xl font-bold text-white mb-4 flex items-center sticky top-0 glass-header pb-4 -mx-8 px-8 pt-2 mb-4 z-10">
                      <svg className="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
                      </svg>
                      Verkligt Exempel
                    </h3>
                    <div className="example-text font-medium whitespace-pre-wrap">
                      {question.example}
                    </div>
                  </div>

                  {/* Next Button */}
                  <button
                    onClick={handleNext}
                    className="w-full px-8 py-4 bg-gradient-to-r from-blue-600 to-cyan-500 rounded-xl font-bold text-white text-xl hover:shadow-lg hover:scale-105 transition-all"
                  >
                    {currentQuestion < questions.length - 1 ? 'N√§sta fr√•ga ‚Üí' : 'Se resultat üéØ'}
                  </button>
                </div>
              )}

              {!showExplanation && (
                <div className="bg-white/5 backdrop-blur-lg rounded-2xl p-12 border border-white/10 flex items-center justify-center min-h-[400px]">
                  <div className="text-center text-blue-300">
                    <svg className="w-16 h-16 mx-auto mb-4 opacity-50" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    <p className="text-lg">
                      V√§lj ett svar f√∂r att se<br/>detaljerad f√∂rklaring och exempel
                    </p>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </main>
  )
}
